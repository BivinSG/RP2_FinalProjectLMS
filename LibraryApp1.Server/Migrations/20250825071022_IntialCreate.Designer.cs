// <auto-generated />
using System;
using LibraryApp1.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp1.Server.Migrations
{
    [DbContext(typeof(DbsLibraryContext))]
    [Migration("20250825071022_IntialCreate")]
    partial class IntialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryApp1.Server.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("author_name");

                    b.HasKey("AuthorId")
                        .HasName("PK__author__86516BCFA04FAA4C");

                    b.ToTable("author", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("book_title");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Coverpage")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("coverpage");

                    b.Property<string>("Keywords")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keywords");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("language_id");

                    b.Property<int>("PubYear")
                        .HasColumnType("int")
                        .HasColumnName("pub_year");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Summary")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("summary");

                    b.HasKey("BookId")
                        .HasName("PK__books__490D1AE1AF8DBC0F");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Bookauthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.HasKey("Id")
                        .HasName("PK__bookauth__3213E83F37F0C373");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("bookauthor", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Bookreview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("review");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("ReviewId")
                        .HasName("PK__bookrevi__60883D9064AE9796");

                    b.HasIndex("BookId");

                    b.HasIndex("Userid");

                    b.ToTable("bookreview", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("category_name");

                    b.HasKey("CategoryId")
                        .HasName("PK__category__D54EE9B40A1FD796");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Copy", b =>
                {
                    b.Property<int>("CopyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("copy_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CopyId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_available");

                    b.HasKey("CopyId")
                        .HasName("PK__copies__3C21D2D2D4AE87BC");

                    b.HasIndex("BookId");

                    b.ToTable("copies", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Fine", b =>
                {
                    b.Property<int>("FineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fine_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FineId"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("due_date");

                    b.Property<string>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasDefaultValue("yes")
                        .HasColumnName("is_paid");

                    b.Property<int?>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    b.Property<double?>("PaidAmount")
                        .HasColumnType("float")
                        .HasColumnName("paid_amount");

                    b.Property<DateOnly?>("PaidDate")
                        .HasColumnType("date")
                        .HasColumnName("paid_date");

                    b.HasKey("FineId")
                        .HasName("PK__fine__F3C688D192121BA5");

                    b.HasIndex("LoanId");

                    b.ToTable("fine", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("language_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("language_name");

                    b.HasKey("LanguageId")
                        .HasName("PK__language__804CF6B3CC8A94CD");

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("loan_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

                    b.Property<int?>("CopyId")
                        .HasColumnType("int")
                        .HasColumnName("copy_id");

                    b.Property<DateOnly>("DateOfPurchase")
                        .HasColumnType("date")
                        .HasColumnName("date_of_purchase");

                    b.Property<DateOnly?>("DateOfReturn")
                        .HasColumnType("date")
                        .HasColumnName("date_of_return");

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("date")
                        .HasColumnName("expiry_date");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit")
                        .HasColumnName("is_returned");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("LoanId")
                        .HasName("PK__loan__A1F79554E523197B");

                    b.HasIndex("CopyId");

                    b.HasIndex("Userid");

                    b.ToTable("loan", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reservation_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<string>("IsReserved")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("requested")
                        .HasColumnName("is_reserved");

                    b.Property<DateOnly>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("ReservationId")
                        .HasName("PK__reservat__31384C2929C69BB5");

                    b.HasIndex("BookId");

                    b.HasIndex("Userid");

                    b.ToTable("reservation", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Userid"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EmailId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_id");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasDefaultValue("yes")
                        .HasColumnName("is_active");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mobile_number")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Userid")
                        .HasName("PK__users__CBA1B257EC8E133C");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Book", b =>
                {
                    b.HasOne("LibraryApp1.Server.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK_Book_Author");

                    b.HasOne("LibraryApp1.Server.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__books__category___3C69FB99");

                    b.HasOne("LibraryApp1.Server.Models.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId")
                        .HasConstraintName("FK__books__language___3D5E1FD2");

                    b.Navigation("Author");

                    b.Navigation("Category");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Bookauthor", b =>
                {
                    b.HasOne("LibraryApp1.Server.Models.Author", "Author")
                        .WithMany("Bookauthors")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__bookautho__autho__4222D4EF");

                    b.HasOne("LibraryApp1.Server.Models.Book", "Book")
                        .WithMany("Bookauthors")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__bookautho__book___4316F928");

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Bookreview", b =>
                {
                    b.HasOne("LibraryApp1.Server.Models.Book", "Book")
                        .WithMany("Bookreviews")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__bookrevie__book___571DF1D5");

                    b.HasOne("LibraryApp1.Server.Models.User", "User")
                        .WithMany("Bookreviews")
                        .HasForeignKey("Userid")
                        .HasConstraintName("FK__bookrevie__useri__5629CD9C");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Copy", b =>
                {
                    b.HasOne("LibraryApp1.Server.Models.Book", "Book")
                        .WithMany("Copies")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__copies__book_id__45F365D3");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Fine", b =>
                {
                    b.HasOne("LibraryApp1.Server.Models.Loan", "Loan")
                        .WithMany("Fines")
                        .HasForeignKey("LoanId")
                        .HasConstraintName("FK__fine__loan_id__59FA5E80");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Loan", b =>
                {
                    b.HasOne("LibraryApp1.Server.Models.Copy", "Copy")
                        .WithMany("Loans")
                        .HasForeignKey("CopyId")
                        .HasConstraintName("FK__loan__copy_id__4D94879B");

                    b.HasOne("LibraryApp1.Server.Models.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("Userid")
                        .HasConstraintName("FK__loan__userid__4CA06362");

                    b.Navigation("Copy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Reservation", b =>
                {
                    b.HasOne("LibraryApp1.Server.Models.Book", "Book")
                        .WithMany("Reservations")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__reservati__book___5165187F");

                    b.HasOne("LibraryApp1.Server.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("Userid")
                        .HasConstraintName("FK__reservati__useri__5070F446");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Author", b =>
                {
                    b.Navigation("Bookauthors");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Book", b =>
                {
                    b.Navigation("Bookauthors");

                    b.Navigation("Bookreviews");

                    b.Navigation("Copies");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Copy", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Language", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.Loan", b =>
                {
                    b.Navigation("Fines");
                });

            modelBuilder.Entity("LibraryApp1.Server.Models.User", b =>
                {
                    b.Navigation("Bookreviews");

                    b.Navigation("Loans");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
